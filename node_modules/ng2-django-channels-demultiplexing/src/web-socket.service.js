"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var Rx_1 = require("rxjs/Rx");
var web_socket_service_config_1 = require("./web-socket-service-config");
var WebSocketService = (function () {
    function WebSocketService(config) {
        var _this = this;
        this.wsObservable = Rx_1.Observable.create(function (observer) {
            _this.ws = new WebSocket(config.websocket_url);
            _this.ws.onopen = function (event) {
            };
            _this.ws.onclose = function (event) {
                if (event.wasClean) {
                    observer.complete();
                }
                else {
                    observer.error(event);
                }
            };
            _this.ws.onerror = function (event) {
                observer.error(event);
            };
            _this.ws.onmessage = function (event) {
                observer.next(event.data);
            };
            return function () {
                _this.ws.close();
            };
        }).share();
    }
    WebSocketService.prototype.getDataStream = function () {
        var _this = this;
        return Rx_1.Observable.create(function (observer) {
            var subscription = _this.wsObservable.subscribe(observer);
            return function () {
                subscription.unsubscribe();
            };
        }).retryWhen(function (error) { return error.delay(3000); });
    };
    WebSocketService.prototype.sendData = function (message) {
        this.ws.send(message);
    };
    return WebSocketService;
}());
WebSocketService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [web_socket_service_config_1.WebSocketServiceConfig])
], WebSocketService);
exports.WebSocketService = WebSocketService;
//# sourceMappingURL=web-socket.service.js.map